<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>All PDFs</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

    <script>
        // ✅ Dark Mode Toggle Function
        function toggleDarkMode() {
            document.documentElement.classList.toggle('dark');
            localStorage.setItem("theme", document.documentElement.classList.contains("dark") ? "dark" : "light");
        }

        // ✅ Check Local Storage for Theme Preference
        window.onload = function() {
            if (localStorage.getItem("theme") === "dark") {
                document.documentElement.classList.add("dark");
            }
            document.getElementById("loading").style.display = "none";
            document.getElementById("pdfList").classList.remove("hidden");
        };
    </script>

    <!-- ✅ Firebase SDK -->
    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js";
        import { getAuth, signInWithPopup, GoogleAuthProvider, onAuthStateChanged, signOut } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-auth.js";

       
const firebaseConfig = {
    apiKey: "AIzaSyBei7dDbq3rf_oDS0vW0Hpv2BHO0C5Oh_k",
    authDomain: "texttopdfconverter-95c62.firebaseapp.com",
    projectId: "texttopdfconverter-95c62",
    storageBucket: "texttopdfconverter-95c62.firebasestorage.app",
    messagingSenderId: "574641352096",
    appId: "1:574641352096:web:28183047f39938a7d488c5"
  };

        const app = initializeApp(firebaseConfig);
        const auth = getAuth(app);
        const provider = new GoogleAuthProvider();

        function handleAuth() {
            if (auth.currentUser) {
                console.log("Logging out...");
                signOut(auth);
            } else {
                console.log("Logging in...");
                signInWithPopup(auth, provider).catch((error) => {
                    console.error("❌ Login Error:", error.message);
                    alert("Login failed: " + error.message);
                });
            }
        }
        window.handleAuth = handleAuth;

        onAuthStateChanged(auth, (user) => {
            if (user) {
                document.getElementById("userEmail").innerText = `🔹 Logged in as: ${user.email}`;
                document.getElementById("userEmail").classList.remove("hidden");
                document.getElementById("authButton").innerText = "Logout";
                document.querySelectorAll(".deleteButton").forEach(btn => btn.classList.remove("hidden"));
            } else {
                document.getElementById("userEmail").classList.add("hidden");
                document.getElementById("authButton").innerText = "Login";
                document.querySelectorAll(".deleteButton").forEach(btn => btn.classList.add("hidden"));
            }
        });

        function deletePDF(filename) {
            const user = auth.currentUser;
            if (!user) {
                alert("❌ Please log in to delete PDFs.");
                return;
            }

            user.getIdToken(true).then(idToken => {
                fetch("/delete-pdf", {
                    method: "POST",
                    headers: { 
                        "Content-Type": "application/json",
                        "Authorization": `Bearer ${idToken}`
                    },
                    body: JSON.stringify({ filename }),
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert("✅ File deleted successfully");
                        location.reload();
                    } else {
                        alert("❌ Failed to delete file: " + data.message);
                    }
                })
                .catch(err => console.error("❌ Error deleting file:", err));
            });
        }
        window.deletePDF = deletePDF;

        function filterPDFs() {
            let searchInput = document.getElementById("search").value.toLowerCase();
            let items = document.querySelectorAll(".pdf-item");

            items.forEach(item => {
                let filename = item.getAttribute("data-filename").toLowerCase();
                item.style.display = filename.includes(searchInput) ? "flex" : "none";
            });
        }
        window.filterPDFs = filterPDFs;
    </script>
</head>
<body class="bg-gray-100 dark:bg-gray-900 p-4 text-gray-900 dark:text-gray-200 transition duration-300">
    <div class="max-w-3xl mx-auto bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg">
        <div class="flex justify-between items-center mb-4">
            <h1 class="text-2xl font-bold">List of All PDFs</h1>
            <div>
                <button onclick="toggleDarkMode()" class="bg-gray-600 text-white px-3 py-1 rounded shadow hover:bg-gray-700 transition duration-300">🌙</button>
                <button id="authButton" onclick="handleAuth()" class="bg-blue-500 text-white px-3 py-1 rounded shadow hover:bg-blue-600 transition duration-300 ml-2">Login</button>
            </div>
        </div>
        <p id="userEmail" class="text-gray-500 text-sm hidden"></p>

        <input 
            type="text" 
            id="search" 
            onkeyup="filterPDFs()" 
            placeholder="🔍 Search PDFs..." 
            class="w-full p-3 border border-gray-300 rounded dark:border-gray-700 bg-gray-50 dark:bg-gray-700 text-gray-800 dark:text-white transition duration-300"
        >

        <div id="loading" class="text-center text-gray-500 mt-4">Loading PDFs...</div>

        <div id="pdfList" class="hidden grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
            <% pdfFiles.forEach(file => { %>
                <div class="pdf-item p-4 border rounded-lg shadow-lg bg-gray-50 dark:bg-gray-700 transition duration-300" data-filename="<%= file.name %>">
                    <a href="<%= file.url %>" target="_blank" class="block text-blue-500 dark:text-blue-300 font-semibold hover:underline"><%= file.name %></a>
                    <p class="text-gray-500 text-xs mt-1"><%= new Date(file.created).toLocaleString() %> | <%= file.size %></p>
                    <button class="deleteButton hidden bg-red-500 text-white px-3 py-1 rounded mt-2 text-sm hover:bg-red-600 transition duration-300" onclick="deletePDF('<%= file.name %>')">
                        🗑 Delete
                    </button>
                </div>
            <% }) %>
        </div>
    </div>
</body>
</html>
